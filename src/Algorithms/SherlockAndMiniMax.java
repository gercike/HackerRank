package Algorithms;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public class SherlockAndMiniMax {
    public static void main(String[] args) {
        int[] array1 =
                new int[]{412812216, 39588698, 618476302, 23949062, 385062504, 500380912, 133993220, 253538412, 49853908, 556943110, 421175120, 31001886, 698632544, 659644094,
                        543241562, 328693230, 473767878, 94650192, 261298668, 81020646, 152674656, 71260178, 410072894, 657224934, 385308024, 500873116, 377377992, 221445580,
                        289020784, 280110540, 668245976, 272868024, 609082470, 662923876, 215496588, 352866418, 625495606, 362490372, 87327484, 87297392, 171418748, 767049532,
                        134155334, 519780706, 164644960, 522353024, 34967376, 497247742, 419476468, 115591096, 177450740, 521051328, 455428582, 324065320, 476256088, 438088048,
                        520947238, 350333814, 20101160, 386338066, 210167922, 680539272, 508259732, 527823142, 773567838, 112882440, 255369880, 667356898, 42151602, 430074426,
                        110779286, 685509134, 375584708, 121084406, 444677050, 729861000, 600868530, 393698160, 688872478, 453800664, 517424924, 659752878, 570023768, 766153438,
                        25728816, 407515478, 230783020, 441631022, 715996086, 636198788, 700192302, 224742384, 532679674, 418665374, 444987160, 783318514, 502872626, 73389986,
                        262999934};
        int[] array2 =
                new int[]{263044060, 323471968, 60083128, 764550014, 209332334, 735326740, 558683912, 626871620, 232673588, 428805364, 221674872, 261029278, 139767646, 146996700,
                        200921412, 121542678, 96223500, 239197414, 407346706, 143348970, 60722446, 664904326, 352123022, 291011666, 594294166, 397870656, 60694236, 376586636,
                        486260888, 114933906, 493037208, 5321608, 90019990, 601686988, 712093982, 575851770, 411329684, 462785470, 563110618, 232790384, 511246848, 521904074,
                        550301294, 142371172, 241067834, 14042944, 249208926, 36834004, 69321106, 467588012, 92173320, 360474676, 221615472, 340320496, 62541478, 360772498,
                        372355942, 445408968, 342087972, 685617022, 307398890, 437939090, 720057720, 718957462, 387059594, 583359512, 589920332, 500463226, 770726204, 434976772,
                        567860154, 510626506, 614077600, 620953322, 570332092, 623026436, 502427638, 640333172, 370673998};
        Arrays.sort(array1);
        Arrays.sort(array2);
        System.out.println(Arrays.toString(array1));
        System.out.println();
        System.out.println(Arrays.toString(array2));
    }

    static int sherlockAndMinimax(int[] arr, int p, int q) {
        Arrays.sort(arr);
        int largestGap = 0;
        int theWantedM;
        int answer = 0;
        int bottom = 0;
        int top;
        boolean wasLoopBroken = false;
        for (int i = 0; i < arr.length - 1; i++) {
            bottom = arr[i];
            top = arr[i + 1];
            int gap = top - bottom;
            theWantedM = (bottom + top) / 2;
            if (theWantedM > q) {
                wasLoopBroken = true;
                break;
            }
            if (gap > largestGap && theWantedM >= p && theWantedM <= q) {
                largestGap = gap;
                answer = theWantedM;
            }
        }
        if (p < arr[0] && arr[0] - p >= largestGap / 2) {
            answer = p;
        }
        if (q > arr[arr.length - 1] && q - arr[arr.length - 1] > largestGap / 2) {
            answer = q;
        }
        if (wasLoopBroken && q - bottom > largestGap / 2) {
            answer = q;
        }
        return answer;
    }
}
